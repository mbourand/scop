CC=g++
CFLAGS=
NAME=scop

SRC_FOLDER=src/
OBJ_FOLDER=obj/
INC_FOLDER=inc/
DEFINES=-DGLEW_STATIC

GLEW_FOLDER=dependencies/GLEW/
GLFW_FOLDER=dependencies/GLFW/
GLM_FOLDER=dependencies/GLM/

GLEW_INC_FOLDER=$(addprefix $(GLEW_FOLDER), include)
GLFW_INC_FOLDER=$(addprefix $(GLFW_FOLDER), include)
GLM_INC_FOLDER=$(GLM_FOLDER)

GLEW_LIB_FOLDER=$(addprefix $(GLEW_FOLDER), lib)
GLFW_LIB_FOLDER=$(addprefix $(GLFW_FOLDER), lib)

LIB_LINK=-lglfw3 -lglew -lopengl32

SRC_FILES=$(wildcard $(SRC_FOLDER)*.cpp) $(wildcard $(SRC_FOLDER)**/*.cpp)
OBJ_FILES=$(addprefix $(OBJ_FOLDER), $(SRC_FILES:.cpp=.o))

$(OBJ_FOLDER)$(SRC_FOLDER)%.o: $(SRC_FOLDER)%.cpp
	@echo Compiling $(notdir $<)
	@mkdir $(subst /,\, $(dir $@)) 2>$null || exit 0
	@$(CC) $(CFLAGS) $(DEFINES) -o $@ -c $< -I$(INC_FOLDER) -I$(GLEW_INC_FOLDER) -I$(GLFW_INC_FOLDER) -I$(GLM_INC_FOLDER)

all: $(OBJ_FILES)
	$(CC) $(CFLAGS) $(DEFINES) -o $(NAME) $(OBJ_FILES) -I$(INC_FOLDER) -I$(GLEW_INC_FOLDER) -I$(GLFW_INC_FOLDER) -I$(GLM_INC_FOLDER) \
		-L$(GLEW_LIB_FOLDER) -L$(GLFW_LIB_FOLDER) $(LIB_LINK)

clean:
	rmdir /S /Q $(subst /,\,$(OBJ_FOLDER)) || exit 0

fclean: clean
	rm $(NAME) || exit 0

re: fclean all
